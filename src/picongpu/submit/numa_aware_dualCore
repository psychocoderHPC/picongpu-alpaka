#!/bin/bash

smiOutput=`nvidia-smi topo -m `
numCores=`cat /proc/cpuinfo | grep processor| tail -n 1 | cut -d":" -f 2`
let numCores=numCores+1
numCPUSockets=`numactl --hardware | grep available | cut -d" " -f 2`
numGPUs=`echo "$smiOutput" | sed  -n '2,${p}' | grep GPU | wc -l`
let numGPUsPerSocket=numGPUs/numCPUSockets

ibOffsets=`echo "$smiOutput" | head -n1 | awk '{for(i=1;i<NF;++i){ if($i~/mlx/) printf("%i ",i+1);} }'`

if [ -n "$OMPI_COMM_WORLD_LOCAL_RANK" ] ; then
  
  let localRank=$OMPI_COMM_WORLD_LOCAL_RANK

  let cpuSocket=localRank%numCPUSockets
  let socketGPUOffset=cpuSocket*numGPUsPerSocket
  let gpuId=localRank/numCPUSockets+socketGPUOffset

  gpuConnections=`echo "$smiOutput" | sed  -n "$((gpuId+2))"p`

  for conn in $ibOffsets
  do
    sockType=`echo "$gpuConnections" | awk -v i=$conn '{print $i}'`
    if [ $sockType != "SOC" ] ; then
      ibName=`echo "$smiOutput"| head -n1 | awk -v n=$conn '{printf("%s",$(n-1))}'`
      ibDevices+="$ibName "
    fi
  done

  ibDevices=`echo $ibDevices | tr " " ","`

  export MPI_LOCAL_RANK=$localRank
  let firstCore=$(( localRank*2 ))
  # define OpenMP threads hard to two
  export OMP_NUM_THREADS="2"
  #echo --physcpubind="$firstCore - $((firstCore + 1))" r=$MPI_LOCAL_RANK g=$CUDA_VISIBLE_DEVICES ib=$OMPI_MCA_btl_openib_if_include ompthreads="$OMP_NUM_THREADS" numactl --cpunodebind="$cpuSocket" --preferred="$cpuSocket" $*
  numactl --physcpubind="$firstCore"-"$((firstCore + 1))" --cpunodebind="$cpuSocket" --preferred="$cpuSocket" $*
else
  $*
fi
 exit $?
